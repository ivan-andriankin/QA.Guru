// говорим, что используем язык Java
plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
}

// говорим откуда будем подтягивать зависимости
repositories {
    mavenCentral()
}

allure {
    report {
        version.set("2.19.0")
    }
    adapter { // отвечает за появление папки build/allure-results
        aspectjWeaver.set(true) // обработка аннотации @Step
        frameworks {
            junit5 { // название фреймворка
                adapterVersion.set("2.19.0") // версия интеграции фреймворка и Allure
            }
        }
    }
}

// какие зависимости будем использовать
dependencies {
    testImplementation (
            "com.codeborne:selenide:6.10.3",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "org.slf4j:slf4j-simple:2.0.6",
            "org.assertj:assertj-core:3.23.1",
            "com.codeborne:pdf-test:1.5.0",
            "com.codeborne:xls-test:1.4.3",
            "com.opencsv:opencsv:5.7.1",
            "com.google.code.gson:gson:2.10.1",
            "com.fasterxml.jackson.core:jackson-core:2.14.1",
            "com.fasterxml.jackson.core:jackson-databind:2.14.1",
            "com.github.javafaker:javafaker:1.0.2",
            "io.qameta.allure:allure-selenide:2.20.1")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// сказать какой тест движок использовать
test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

task simple_test(type: Test) {
    useJUnitPlatform {
        includeTags("simple")
    }
}
